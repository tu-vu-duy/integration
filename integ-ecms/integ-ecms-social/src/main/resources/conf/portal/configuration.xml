<?xml version="1.0" encoding="ISO-8859-1"?>
<configuration xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.exoplaform.org/xml/ns/kernel_1_1.xsd http://www.exoplaform.org/xml/ns/kernel_1_1.xsd"
	xmlns="http://www.exoplaform.org/xml/ns/kernel_1_1.xsd">
	<component profiles="default,all,social">
		<key>org.exoplatform.wcm.ext.component.document.service.DocumentService</key>
		<type>org.exoplatform.wcm.ext.component.document.service.DocumentServiceImpl</type>
	</component>
	<component profiles="default,all,social">
		<type>org.exoplatform.wcm.ext.component.identity.provider.DocumentIdentityProvider</type>
	</component>
		
	<external-component-plugins>
		<target-component> org.exoplatform.social.core.manager.IdentityManager</target-component>
		<component-plugin profiles="all">
			<name>DocumentIdentityProvider plugin</name>
			<set-method>registerIdentityProviders</set-method>
			<type>org.exoplatform.social.core.identity.IdentityProviderPlugin</type>
			<init-params>
				<values-param>
					<name>providers</name>
					<description>Identity Providers</description>
					<value>org.exoplatform.wcm.ext.component.identity.provider.DocumentIdentityProvider</value>
				</values-param>
			</init-params>
		</component-plugin>
	</external-component-plugins>
	<external-component-plugins>
		<target-component>org.exoplatform.wcm.ext.component.document.service.DocumentService</target-component>
	</external-component-plugins>
	
	<external-component-plugins>
		<target-component>org.exoplatform.services.listener.ListenerService</target-component>
		
		<component-plugin profiles="all">
			<name>ActivityNotify.event.NodeCreated</name>
			<set-method>addListener</set-method>
			<type>org.exoplatform.wcm.ext.component.activity.listener.ContentCreateActivityListener</type>
			<description>this listener will publish an activity when a content has been	created and initiated state</description>
		</component-plugin>
		
		<component-plugin profiles="all">
			<name>ActivityNotify.event.FileCreated</name>
			<set-method>addListener</set-method>
			<type>org.exoplatform.wcm.ext.component.activity.listener.FileCreateActivityListener</type>
			<description>this listener will publish an activity when a file has been	created and initiated state</description>
		</component-plugin>
		
		<component-plugin profiles="all">
			<name>ActivityNotify.event.StateChanged</name>
			<set-method>addListener</set-method>
			<type>org.exoplatform.wcm.ext.component.activity.listener.PublicationStateActivityListener</type>
			<description>this listener will publish an activity when the state of a content	has been changed</description>
		</component-plugin>
		
		<component-plugin profiles="all">
			<name>ActivityNotify.event.PropertyUpdated</name>
			<set-method>addListener</set-method>
			<type>org.exoplatform.wcm.ext.component.activity.listener.ContentUpdateActivityListener</type>
			<description>this listener will publish an activity when a content has been	updated</description>
		</component-plugin>
		
		<component-plugin profiles="all">
			<name>FileActivityNotify.event.PropertyAdded</name>
			<set-method>addListener</set-method>
			<type>org.exoplatform.wcm.ext.component.activity.listener.FileAddPropertyActivityListener</type>
			<description>this listener will create a new comment when a property has been	added</description>
		</component-plugin>
		
		<component-plugin profiles="all">
			<name>FileActivityNotify.event.PropertyRemoved</name>
			<set-method>addListener</set-method>
			<type>org.exoplatform.wcm.ext.component.activity.listener.FileRemovePropertyActivityListener</type>
			<description>this listener will create a new comment/activity when a property has been removed</description>
		</component-plugin>		
		
		<component-plugin profiles="all">
			<name>FileActivityNotify.event.FileRemoved</name>
			<set-method>addListener</set-method>
			<type>org.exoplatform.wcm.ext.component.activity.listener.FileRemoveActivityListener</type>
			<description>this listener will create a new comment/activity when a property has been removed</description>
		</component-plugin>
		
		<component-plugin profiles="all">
			<name>FileActivityNotify.event.PropertyUpdated</name>
			<set-method>addListener</set-method>
			<type>org.exoplatform.wcm.ext.component.activity.listener.FileUpdateActivityListener</type>
			<description>this listener will create a new comment when a property has been	updated</description>
		</component-plugin>
		
		<component-plugin profiles="all">
      <name>ActivityNotify.event.AttachmentAdded</name>
      <set-method>addListener</set-method>
      <type>org.exoplatform.wcm.ext.component.activity.listener.AttachmentActivityListener</type>
      <description>this listener will publish an activity when an attachment added</description>
    </component-plugin>
    
    <component-plugin profiles="all">
      <name>ActivityNotify.event.AttachmentRemoved</name>
      <set-method>addListener</set-method>
      <type>org.exoplatform.wcm.ext.component.activity.listener.AttachmentActivityListener</type>
      <description>this listener will publish an activity when an attachment removed</description>
    </component-plugin>
    
    <component-plugin profiles="all">
      <name>ActivityNotify.event.CategoryAdded</name>
      <set-method>addListener</set-method>
      <type>org.exoplatform.wcm.ext.component.activity.listener.CategoryActivityListener</type>
      <description>this listener will publish an activity when a Category added</description>
    </component-plugin>
    
    <component-plugin profiles="all">
      <name>ActivityNotify.event.CategoryRemoved</name>
      <set-method>addListener</set-method>
      <type>org.exoplatform.wcm.ext.component.activity.listener.CategoryActivityListener</type>
      <description>this listener will publish an activity when a Category removed</description>
    </component-plugin>
    
    <component-plugin profiles="all">
      <name>ActivityNotify.event.TagAdded</name>
      <set-method>addListener</set-method>
      <type>org.exoplatform.wcm.ext.component.activity.listener.TagActivityListener</type>
      <description>this listener will publish an activity when tags added</description>
    </component-plugin>
    
    <component-plugin profiles="all">
      <name>ActivityNotify.event.TagRemoved</name>
      <set-method>addListener</set-method>
      <type>org.exoplatform.wcm.ext.component.activity.listener.TagActivityListener</type>
      <description>this listener will publish an activity when tags removed</description>
    </component-plugin>
    
    <component-plugin profiles="all">
      <name>ActivityNotify.event.CommentAdded</name>
      <set-method>addListener</set-method>
      <type>org.exoplatform.wcm.ext.component.activity.listener.CommentAddedActivityListener</type>
      <description>this listener will publish an activity when comment added</description>
    </component-plugin>
    
    <component-plugin profiles="all">
      <name>ActivityNotify.event.CommentUpdated</name>
      <set-method>addListener</set-method>
      <type>org.exoplatform.wcm.ext.component.activity.listener.CommentUpdatedActivityListener</type>
      <description>this listener will publish an activity when comment updated</description>
    </component-plugin>
    
    <component-plugin profiles="all">
      <name>ActivityNotify.event.CommentRemoved</name>
      <set-method>addListener</set-method>
      <type>org.exoplatform.wcm.ext.component.activity.listener.CommentRemovedActivityListener</type>
      <description>this listener will publish an activity when comment removed</description>
    </component-plugin>
    
    <component-plugin profiles="all">
      <name>ActivityNotify.event.NodeMoved</name>
      <set-method>addListener</set-method>
      <type>org.exoplatform.wcm.ext.component.activity.listener.ContentMovedActivityListener</type>
      <description>this listener will publish an activity when a content has been updated</description>
    </component-plugin>
    
    <component-plugin profiles="all">
      <name>ActivityNotify.event.NodeRemoved</name>
      <set-method>addListener</set-method>
      <type>org.exoplatform.wcm.ext.component.activity.listener.ContentRemovedActivityListener</type>
      <description>this listener will publish an activity when a content has been updated</description>
    </component-plugin>
    
    <component-plugin profiles="all">
      <name>ActivityNotify.event.RevisionChanged</name>
      <set-method>addListener</set-method>
      <type>org.exoplatform.wcm.ext.component.activity.listener.ContentRevisionActivityListener</type>
      <description>this listener will publish an activity when content revision changed</description>
    </component-plugin>
	</external-component-plugins>
	
	<external-component-plugins>
		<target-component>org.exoplatform.webui.ext.UIExtensionManager</target-component>
		<component-plugin profiles="all">
			<name>add.action</name>
			<set-method>registerUIExtensionPlugin</set-method>
			<type>org.exoplatform.webui.ext.UIExtensionPlugin</type>
			<init-params>
				<object-param>
					<name>Content Activity</name>
					<object	type="org.exoplatform.social.webui.activity.UIActivityExtension">
						<field name="type">
							<string>org.exoplatform.social.webui.activity.BaseUIActivity</string>
						</field>
						<field name="name">
							<string>contents:spaces</string>
						</field>
						<field name="component">
							<string>org.exoplatform.wcm.ext.component.activity.ContentUIActivity</string>
						</field>
						<field name="activityBuiderClass">
							<string>org.exoplatform.wcm.ext.component.activity.ContentUIActivityBuilder</string>
						</field>
					</object>
				</object-param>
			</init-params>
		</component-plugin>
	</external-component-plugins>
	
	<external-component-plugins>
		<target-component>org.exoplatform.webui.ext.UIExtensionManager</target-component>
		<component-plugin profiles="all">
			<name>add.action</name>
			<set-method>registerUIExtensionPlugin</set-method>
			<type>org.exoplatform.webui.ext.UIExtensionPlugin</type>
			<init-params>
				<object-param>
					<name>File Activity</name>
					<object	type="org.exoplatform.social.webui.activity.UIActivityExtension">
						<field name="type">
							<string>org.exoplatform.social.webui.activity.BaseUIActivity</string>
						</field>
						<field name="name">
							<string>files:spaces</string>
						</field>
						<field name="component">
							<string>org.exoplatform.wcm.ext.component.activity.FileUIActivity</string>
						</field>
						<field name="activityBuiderClass">
							<string>org.exoplatform.wcm.ext.component.activity.FileUIActivityBuilder</string>
						</field>
					</object>
				</object-param>
			</init-params>
		</component-plugin>
	</external-component-plugins>
	
	<external-component-plugins>
		<!-- The full qualified name of the ResourceBundleService -->
		<target-component>
			org.exoplatform.services.resources.ResourceBundleService</target-component>
		<component-plugin profiles="all">
			<!-- The name of the plugin -->
			<name>ResourceBundle Plugin</name>
			<!-- The name of the method to call on the ResourceBundleService in order to register the ResourceBundles -->
			<set-method>addResourceBundle</set-method>
			<!-- The full qualified name of the BaseResourceBundlePlugin -->
			<type>
				org.exoplatform.services.resources.impl.BaseResourceBundlePlugin</type>
			<init-params>
				<values-param>
					<name>init.resources</name>
					<description>Store the following resources into the db for the first launch </description>
					<value>locale.extension.SocialIntegration</value>
				</values-param>
				<values-param>
					<name>portal.resource.names</name>
					<description>The properties files of the portal , those file will be
						merged into one ResoruceBundle properties </description>
					<value>locale.extension.SocialIntegration</value>
				</values-param>
			</init-params>
		</component-plugin>
	</external-component-plugins>

	  <external-component-plugins>
    <target-component>org.exoplatform.commons.api.notification.service.setting.PluginContainer</target-component>
    <component-plugin>
      <name>notification.plugins</name>
      <set-method>addChildPlugin</set-method>
      <type>org.exoplatform.wcm.notification.plugin.ContentActivityChildPlugin</type>
      <description>Initial information for content child notification plugin.</description>
      <init-params>
        <value-param>
          <name>templatePath</name>
          <value><![CDATA[classpath:/groovy/ecm/social-integration/plugin/notification/ContentActivity.gtmpl]]></value>
        </value-param>
        <object-param>
          <name>template.ContentActivityChildPlugin</name>
          <description>The template of ContentActivityChildPlugin</description>
          <object type="org.exoplatform.commons.api.notification.plugin.config.PluginConfig">
            <field name="pluginId">
              <string>contents:spaces</string>
            </field>
            <field name="bundlePath">
              <string>locale.extension.notification.ECMSNotification</string>
            </field>
          </object>
        </object-param>
      </init-params>
    </component-plugin>
  </external-component-plugins>

  <external-component-plugins>
    <target-component>org.exoplatform.commons.api.notification.service.setting.PluginContainer</target-component>
    <component-plugin>
      <name>notification.plugins</name>
      <set-method>addChildPlugin</set-method>
      <type>org.exoplatform.wcm.notification.plugin.FileActivityChildPlugin</type>
      <description>Initial information for file child notification plugin.</description>
      <init-params>
        <value-param>
          <name>templatePath</name>
          <value><![CDATA[classpath:/groovy/ecm/social-integration/plugin/notification/FileActivity.gtmpl]]></value>
        </value-param>
        <object-param>
          <name>template.FileActivityChildPlugin</name>
          <description>The template of FileActivityChildPlugin</description>
          <object type="org.exoplatform.commons.api.notification.plugin.config.PluginConfig">
            <field name="pluginId">
              <string>files:spaces</string>
            </field>
            <field name="bundlePath">
              <string>locale.extension.notification.ECMSNotification</string>
            </field>
          </object>
        </object-param>
      </init-params>
    </component-plugin>
  </external-component-plugins>
	
</configuration>
